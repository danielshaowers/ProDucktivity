
/*
android {
    viewBinding.enabled = true
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        targetCompatibility = 1.8
    }

    defaultConfig {
        applicationId "com.example.producktivity"
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    sourceSets {
        main { java.srcDirs = ['src/main/java'] }
        test { java.srcDirs = ['src/test/java'] }
    }
}

dependencies {
    implementation 'com.jjoe64:graphview:4.2.2'
    def room_version = "2.2.4"

    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.0.0'
    implementation 'androidx.navigation:navigation-ui:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'


    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0';
    implementation 'androidx.fragment:fragment:1.2.1'

    def work_version = "2.3.2"
    implementation "androidx.work:work-runtime:$work_version"   //for my app blocking

    // calendar dependencies
    implementation 'com.google.android.gms:play-services-auth:15.0.1'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation('com.google.apis:google-api-services-calendar:v3-rev218-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.0.0';



    implementation 'com.google.api-client:google-api-client:1.20.0'
    implementation 'com.google.api-client:google-api-client-gson:1.20.0'

    // implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'org.testng:testng:6.9.6'

}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}*/


apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

android {
    viewBinding.enabled = true
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        targetCompatibility = 1.8
    }
    configurations.all{
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        applicationId "com.example.producktivity"
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        testOptions {

            execution 'ANDROIDX_TEST_ORCHESTRATOR'
            unitTests{
                includeAndroidResources = true
            }
         /*   unitTests.all {
                jacoco {
                    includeNoLocationClasses = true

                }
            }*/
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    sourceSets {
        main { java.srcDirs = ['src/main/java'] }
        test { java.srcDirs = ['src/test/java'] } //todo: note that this maybe should be androidtest
    }
}


jacoco{
    toolVersion =  "0.8.5" // try a newer version if you can
}
task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories.from = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R*.class',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class'
            ])
    def coverageSourceDirs = [
            '../app/src/main/java'
    ]
    sourceDirectories.from = files(coverageSourceDirs)
    executionData.from = files("$buildDir/outputs/code-coverage/connected/coverage.exec")
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}
dependencies {
    def room_version = "2.2.4"
    def fragment_version = "1.2.4"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    //noinspection GradleDependency
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"
    implementation "android.arch.lifecycle:livedata:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    testImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.2') {
        // Necessary to avoid version conflicts
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }

    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.fragment:fragment:1.2.4'

    def work_version = "2.3.4"
    implementation "androidx.work:work-runtime:$work_version"   //for my app blocking

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'com.jjoe64:graphview:4.2.2'   //For making the graph for the usage stats



    // calendar dependencies
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation('com.google.apis:google-api-services-calendar:v3-rev218-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'


    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"


    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.0.0';


    androidTestUtil 'androidx.test:orchestrator:1.2.0'


    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.api-client:google-api-client-gson:1.20.0'

    // implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.android.volley:volley:1.1.1'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
repositories {
    mavenCentral()
}
